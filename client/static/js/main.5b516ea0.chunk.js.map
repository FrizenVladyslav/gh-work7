{"version":3,"sources":["components/Header/styles.module.scss","containers/App/styles.module.scss","components/AppLoading/styles.module.scss","components/Sidebar/styles.module.scss","containers/Public/Login/styles.module.scss","containers/Public/Register/styles.module.scss","components/AppLoading/index.tsx","components/Footer/index.tsx","stores/user.ts","stores/index.tsx","components/Header/index.tsx","components/Sidebar/index.tsx","utils/history.ts","config.ts","actions/user.ts","containers/Admin/Users/Modal/index.tsx","containers/Admin/Users/index.tsx","containers/Admin/index.tsx","containers/Public/Login/index.tsx","containers/Public/Register/index.tsx","containers/Public/Users/Graph/index.tsx","containers/Public/Users/index.tsx","containers/Public/index.tsx","serviceWorker.ts","index.tsx","containers/App/index.tsx"],"names":["module","exports","AppLoading","className","styles","loading","Footer","this","user","firstName","lastName","observable","action","computed","undefined","configure","enforceActions","RootStore","remotedev","global","userStore","StoreContext","createContext","useStore","store","useContext","Error","StoreProvider","children","Provider","value","Title","Typography","Header","header","to","type","title","level","icon","Sidebar","Sider","collapsible","sidebar","theme","mode","Item","SubMenu","key","createBrowserHistory","api","axios","create","baseURL","process","headers","_","pickBy","Authorization","localStorage","getItem","prefix","addUser","a","async","post","res","data","getInfo","get","UserStore","setUser","getUsers","getStatistic","id","patch","deleteUser","delete","login","email","password","token","setItem","window","location","href","Option","Select","UsersModal","edit","open","onClose","loadUsers","useState","changeUser","target","name","_id","visible","onOk","closeMessage","message","content","userActions","notification","error","success","onCancel","style","color","placeholder","onChange","role","Users","state","modal","changeModal","setState","loadData","users","onClick","dataSource","renderItem","actions","Meta","fullName","description","Modal","Component","Admin","path","component","Login","creds","setCreads","changeCreds","form","block","Register","props","setLoading","map","field","startCase","register","history","push","e","UsersGraph","labels","day","values","count","month","moment","format","width","getData","graphData","console","log","Graph","size","Public","Boolean","hostname","match","ReactDOM","render","initialized","setInitalized","useEffect","layout","Content","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b516ea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\",\"title\":\"styles_title__3N7E-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__SeFd3\",\"content\":\"styles_content__o67Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__32rGI\",\"Gradient\":\"styles_Gradient__1eYmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__VtPxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__jnDsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2ZSSu\"};","import React from 'react'\nimport styles from './styles.module.scss'\n\nconst AppLoading: React.FC = () => (\n  <div className={styles.loading}>\n    <span>Application is loading, please wait...</span>\n  </div>\n)\n\nexport default AppLoading\n","import React from 'react'\nimport { Layout } from 'antd'\n\nconst Footer: React.FC = () => <Layout.Footer>Geekhub</Layout.Footer>\n\nexport default Footer\n","import { observable, action, computed } from 'mobx'\nimport { IUser } from 'models'\n\nclass UserStore {\n  @observable user?: IUser = undefined\n\n  @action\n  setUser = (user: IUser) => {\n    this.user = user\n  }\n\n  @computed\n  get fullName() {\n    return this.user ? this.user.firstName + this.user.lastName : ''\n  }\n\n  @action\n  unserUser = () => {\n    this.user = undefined\n  }\n}\n\nexport default new UserStore()\n","import React, { createContext, useContext, Component } from 'react'\nimport { configure, observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport remotedev from 'mobx-remotedev'\nimport userStore from './user'\n\nconfigure({ enforceActions: 'observed' })\n\n@remotedev({ global: true })\nexport class RootStore {\n  @observable user = userStore\n}\n\nconst store = new RootStore()\n\nexport const StoreContext = createContext<RootStore>(new RootStore())\n\nexport const useStore = (): RootStore => {\n  const store = useContext(StoreContext)\n  if (!store) throw new Error('You have forgot to use StoreProvider, shame on you.')\n  return store\n}\n\nexport const StoreProvider: React.FC = ({ children }) => {\n  const store = useStore()\n  return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n\ntype TMapStoreToProps = (store: RootStore) => Partial<RootStore>\n\nexport const connect = (mapStoreToProps: TMapStoreToProps): Function => {\n  return function(WrappedComponent: any): React.ElementType {\n    return class extends Component {\n      static displayName = `connect(${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'})`\n\n      render() {\n        return (\n          <Observer>\n            {() => <WrappedComponent {...this.props} {...mapStoreToProps(store)} />}\n          </Observer>\n        )\n      }\n    }\n  }\n}\n\nexport default store\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Layout, Icon, Button, Typography } from 'antd'\nimport { useStore } from 'stores'\n\nimport styles from './styles.module.scss'\n\nconst { Title } = Typography\n\nconst Header: React.FC = () => {\n  const { user } = useStore().user\n\n  return (\n    <Layout.Header className={styles.header}>\n      <Link to=\"/\">\n        <Icon type=\"file-image\" /> GeekHub\n      </Link>\n      {user ? (\n        <Title type=\"warning\" className={styles.title} level={4}>\n          {user.firstName}\n        </Title>\n      ) : (\n        <Link to=\"/login\">\n          <Button type=\"primary\" icon=\"info-circle\">\n            Login\n          </Button>\n        </Link>\n      )}\n    </Layout.Header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Layout, Menu, Icon } from 'antd'\nimport { useStore } from 'stores'\n\nimport styles from './styles.module.scss'\n\nconst Sidebar: React.FC = () => {\n  const { user } = useStore().user\n\n  return (\n    <Layout.Sider collapsible className={styles.sidebar}>\n      <Menu theme=\"dark\" mode=\"inline\">\n        <Menu.Item>\n          <Link to=\"/users\">Users</Link>\n        </Menu.Item>\n        {!!user && (\n          <Menu.SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <Icon type=\"user\" />\n                <span>Admin</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"3\">\n              <Link to=\"/admin/users\">Users</Link>\n            </Menu.Item>\n          </Menu.SubMenu>\n        )}\n      </Menu>\n    </Layout.Sider>\n  )\n}\n\nexport default Sidebar\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import axios from 'axios'\nimport _ from 'lodash'\n\nexport const host = process.env.REACT_APP_HOST\n\nexport const api = axios.create({\n  baseURL: host,\n  headers: _.pickBy({\n    Authorization: 'Bearer ' + localStorage.getItem('token'),\n  }),\n})\n","import { api } from 'config'\nimport { IUser, IUserStatistic } from 'models/user'\nimport UserStore from 'stores/user'\n\nconst prefix = '/user'\n\nexport async function addUser(user: Partial<IUser>): Promise<IUser> {\n  const res = await api.post(prefix, user)\n  return res.data\n}\n\nexport async function getInfo() {\n  const res = await api.get(`${prefix}/info`)\n  UserStore.setUser(res.data)\n}\n\nexport async function getUsers(): Promise<IUser[]> {\n  const res = await api.get(prefix)\n  return res.data\n}\n\nexport async function getUser(id: IUser['_id']): Promise<IUser> {\n  const res = await api.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport async function getStatistic(): Promise<IUserStatistic[]> {\n  const res = await api.get(`${prefix}/statistic`)\n  return res.data\n}\n\nexport async function setUser(id: IUser['_id'], user: Partial<IUser>): Promise<IUser> {\n  const res = await api.patch(`${prefix}/${id}`, user)\n  return res.data\n}\n\nexport async function deleteUser(id: IUser['_id']) {\n  const res = await api.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport async function register(user: Partial<IUser>): Promise<IUser> {\n  const res = await api.post(`${prefix}/register`, user)\n  return res.data\n}\n\nexport async function login(email: IUser['email'], password: string) {\n  const res = await api.post(`${prefix}/login?email=${email}&password=${password}`)\n  const { token, ...user } = res.data\n  localStorage.setItem('token', token)\n  UserStore.setUser(user)\n  window.location.href = '/'\n}\n","import React, { useState } from 'react'\nimport { Modal, Form, Input, Icon, Select, notification, message } from 'antd'\nimport * as userActions from 'actions/user'\nimport { IUser } from 'models/user'\n\nconst { Option } = Select\n\ninterface IProps {\n  open?: boolean\n  edit?: IUser\n  loadUsers: () => void\n  onClose: () => void\n}\n\nconst UsersModal: React.FC<IProps> = ({ edit, open, onClose, loadUsers }) => {\n  const [user, setUser] = useState<Partial<IUser>>(edit || {})\n\n  if (edit && edit._id !== user._id) setUser(edit)\n  if (!edit && user._id) setUser({})\n\n  function changeUser({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) {\n    setUser({ ...user, [name]: value })\n  }\n\n  async function handleSubmit() {\n    const closeMessage = message.loading({ content: 'Loading...' })\n    try {\n      edit ? await userActions.setUser(edit._id, user) : await userActions.addUser(user)\n      await loadUsers()\n      onClose()\n    } catch (e) {\n      notification.error({ message: e.message || e })\n    } finally {\n      closeMessage()\n      message.success('Success!')\n    }\n  }\n\n  return (\n    <Modal\n      title={(edit ? 'update ' : 'craete ') + 'user'}\n      visible={open}\n      onOk={handleSubmit}\n      onCancel={onClose}\n    >\n      <Form>\n        <Form.Item>\n          <Input\n            name=\"firstName\"\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"First name\"\n            value={user.firstName}\n            onChange={changeUser}\n          />\n          <Input\n            name=\"lastName\"\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Last name\"\n            value={user.lastName}\n            onChange={changeUser}\n          />\n          <Input\n            name=\"email\"\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"email\"\n            value={user.email}\n            onChange={changeUser}\n          />\n          <Select\n            value={user.role || 'user'}\n            onChange={(value: IUser['role']) => setUser({ ...user, role: value })}\n          >\n            <Option value=\"user\">User</Option>\n            <Option value=\"admin\">Admin</Option>\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UsersModal\n","import React, { Component } from 'react'\nimport { List, notification, Spin, Button, Icon, message } from 'antd'\nimport Modal from './Modal'\nimport * as userActions from 'actions/user'\nimport { IUser } from 'models/user'\n\ninterface IState {\n  users?: IUser[]\n  loading: boolean\n  modal: {\n    open: boolean\n    user?: IUser\n  }\n}\n\nclass Users extends Component<{}, IState> {\n  state: IState = {\n    loading: true,\n    modal: { open: false },\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  changeModal = (user?: IUser) => {\n    const { open } = this.state.modal\n    this.setState({ modal: { open: !open, user } })\n  }\n\n  deleteUser = async (id: IUser['_id']) => {\n    try {\n      await userActions.deleteUser(id)\n      this.loadData()\n    } catch (e) {\n      notification.error({ message: e.message })\n    }\n  }\n\n  loadData = async () => {\n    const closeMessage = message.loading({ content: 'Loading...' })\n    try {\n      const users = await userActions.getUsers()\n      this.setState({ users, loading: false })\n    } catch (e) {\n      notification.error({ message: e.message || e })\n    } finally {\n      closeMessage()\n    }\n  }\n\n  render() {\n    const { users, modal } = this.state\n\n    return (\n      <div>\n        <Button icon=\"plus\" type=\"primary\" onClick={() => this.changeModal()}>\n          Add User\n        </Button>\n        <List\n          dataSource={users}\n          renderItem={user => (\n            <List.Item\n              key={user._id}\n              actions={[\n                <Icon type=\"edit\" onClick={() => this.changeModal(user)} />,\n                <Icon type=\"delete\" onClick={() => this.deleteUser(user._id)} />,\n              ]}\n            >\n              <List.Item.Meta title={<p>{user.fullName}</p>} description={user.email} />\n            </List.Item>\n          )}\n        >\n          {this.state.loading && <Spin />}\n        </List>\n        <Modal\n          loadUsers={this.loadData}\n          open={modal.open}\n          edit={modal.user}\n          onClose={() => this.changeModal()}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Users\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\nimport Users from './Users'\n\nconst Admin: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/admin/users\" component={Users} />\n    </Switch>\n  )\n}\n\nexport default Admin\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Input, Icon, Button, notification } from 'antd'\nimport * as userActions from 'actions/user'\n\nimport styles from './styles.module.scss'\n\ninterface ICreds {\n  login?: string\n  password?: string\n}\n\nconst Login: React.FC = () => {\n  const [creds, setCreads] = useState<ICreds>({})\n\n  function changeCreds({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) {\n    setCreads({ ...creds, [name]: value })\n  }\n\n  async function handleSubmit() {\n    const { login, password } = creds\n    if (!login || !password) return\n\n    try {\n      await userActions.login(login, password)\n    } catch (e) {\n      notification.error({ message: 'Not valid credentionals' })\n    }\n  }\n\n  return (\n    <Form className={styles.form}>\n      <Form.Item>\n        <Input\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n          placeholder=\"Username\"\n          name=\"login\"\n          onChange={changeCreds}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Input\n          prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={changeCreds}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button block onClick={handleSubmit}>\n          Login\n        </Button>\n        Or <Link to=\"/register\">register now!</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport { Form, Input, Button, notification } from 'antd'\nimport { register } from 'actions/user'\n\nimport styles from './styles.module.scss'\nimport { RouterProps, WithRouterProps, RouteComponentProps } from 'react-router'\n\ninterface ICreds {\n  firstName?: string\n  lastName?: string\n  email?: string\n}\n\nconst Register: React.FC<RouteComponentProps> = props => {\n  const [creds, setCreads] = useState<ICreds>({})\n  const [loading, setLoading] = useState<boolean>(false)\n\n  function changeCreds({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) {\n    setCreads({ ...creds, [name]: value })\n  }\n\n  function handleSubmit() {\n    setLoading(true)\n    try {\n      register(creds)\n      props.history.push('/login')\n    } catch (e) {\n      notification.error({ message: e.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Form className={styles.form}>\n      {['firstName', 'lastName', 'email', 'password'].map(field => (\n        <Form.Item>\n          <Input name={field} placeholder={_.startCase(field)} onChange={changeCreds} />\n        </Form.Item>\n      ))}\n      <Form.Item>\n        <Button block onClick={handleSubmit}>\n          Register\n        </Button>\n        Or <Link to=\"/login\">Login!</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport moment from 'moment'\nimport { Bar } from 'react-roughviz'\nimport { IUserStatistic } from 'models'\n\ninterface IProps {\n  data: IUserStatistic[]\n}\n\nconst UsersGraph: React.FC<IProps> = ({ data }) => {\n  const labels = data.map(({ day }) => day)\n  const values = data.map(({ count }) => count)\n  const month = moment().format('MMMM')\n  return (\n    <>\n      <h3>Users statistic for {month}</h3>\n      <Bar width={1000} data={{ labels, values }} labels=\"flavor\" values=\"price\" />\n    </>\n  )\n}\n\nexport default UsersGraph\n","import React, { Component } from 'react'\nimport { notification, Spin } from 'antd'\nimport Graph from './Graph'\nimport * as userActions from 'actions/user'\nimport { IUserStatistic } from 'models'\n\ninterface IState {\n  graphData?: IUserStatistic[]\n}\n\nclass Users extends Component<{}, IState> {\n  state: IState = {}\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData = async () => {\n    try {\n      const graphData = await userActions.getStatistic()\n      this.setState({ graphData })\n    } catch (e) {\n      console.log('e', e)\n      notification.error({ message: e.message || e })\n    }\n  }\n\n  render() {\n    const { graphData } = this.state\n    return graphData ? <Graph data={graphData} /> : <Spin size=\"large\" />\n  }\n}\n\nexport default Users\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\nimport Login from './Login'\nimport Register from './Register'\nimport Users from './Users'\n\nconst Public: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/users\" component={Users} />\n    </Switch>\n  )\n}\n\nexport default Public\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'antd/dist/antd.css'\nimport 'sources/styles/styles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route, Router } from 'react-router'\nimport { Layout } from 'antd'\nimport { Header, Footer, AppLoading, Sidebar } from 'components'\nimport { StoreProvider, useStore } from 'stores'\nimport history from 'utils/history'\nimport Admin from '../Admin'\nimport Public from '../Public'\nimport * as userActions from 'actions/user'\n\nimport styles from './styles.module.scss'\n\nexport default function App(): React.ReactElement {\n  const [initialized, setInitalized] = useState(false)\n  const { user } = useStore()\n\n  async function initUser() {\n    try {\n      await userActions.getInfo()\n    } catch (e) {\n      console.error(e)\n    } finally {\n      setInitalized(true)\n    }\n  }\n\n  useEffect(() => {\n    initUser()\n  }, [])\n\n  return initialized ? (\n    <StoreProvider>\n      <Router history={history}>\n        <Layout className={styles.layout}>\n          <Header />\n          <Layout>\n            {user && <Sidebar />}\n            <Layout.Content className={styles.content}>\n              <Switch>\n                <Route path=\"/admin\" component={Admin} />\n                <Route path=\"/\" component={Public} />\n              </Switch>\n            </Layout.Content>\n          </Layout>\n          <Footer />\n        </Layout>\n      </Router>\n    </StoreProvider>\n  ) : (\n    <AppLoading />\n  )\n}\n"],"sourceRoot":""}